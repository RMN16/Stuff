#include <iostream>
#include <stack>

bool isItAnOperation(const char operation)
{
	switch (operation)
	{
	case '+': return 1;
	case '-': return 1;
	case '*': return 1;

	default:
		return 0;
	}
}

int whatAreWeDoing(const char operation, const int a, const int b)
{
	if (operation == '+')
	{
		return a + b;
	}
	else if (operation == '-')
	{
		return a - b;
	}
	else if (operation == '*')
	{
		return a * b;
	}
}

int isItANumber(const char* thing)
{
	return atoi(thing);
}


void doingTheMaths(std::stack<char*> charStack)
{
	std::stack<int> intStack;
	int answer = 0;

	for (size_t i = 1; !charStack.empty(); i *= 10)
	{
		
		while (!isItAnOperation(*charStack.top()))
		{
			int number = 0;
			while (*charStack.top() != ' ')
			{

				if (isItANumber(charStack.top()))
					number = number + (*charStack.top() * i);

				charStack.pop();
			}
			intStack.push(number);
			charStack.pop();
		}

		int placeholder = intStack.top();
		intStack.pop();

		answer += whatAreWeDoing(*charStack.top(), intStack.top(), placeholder);

		while (!intStack.empty())
			intStack.pop();
	}
}

int main()
{
	std::stack<char> stack;
	



	return 0;
}
